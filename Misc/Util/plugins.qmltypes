import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump Zabaat.Misc.Util 1.0 /Zabaat/Misc/Util -notrelocatable'

Module {
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
    }
    Component {
        name: "QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
    Component {
        name: "SortFilterProxyModel"
        prototype: "QSortFilterProxyModel"
        exports: ["Zabaat.Misc.Util/SortFilterProxyModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "FilterSyntax"
            values: {
                "RegExp": 0,
                "Wildcard": 1,
                "FixedString": 2
            }
        }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "source"; type: "QObject"; isPointer: true }
        Property { name: "sortRole"; type: "QByteArray" }
        Property { name: "sortOrder"; type: "Qt::SortOrder" }
        Property { name: "filterRole"; type: "QByteArray" }
        Property { name: "filterString"; type: "string" }
        Property { name: "filterSyntax"; type: "FilterSyntax" }
        Method {
            name: "getOriginalIndex"
            type: "int"
            Parameter { name: "idx"; type: "int" }
        }
        Method { name: "getOriginalIndex"; type: "int" }
        Method {
            name: "get"
            type: "QJSValue"
            Parameter { name: "index"; type: "int" }
        }
    }
}
