import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump Zabaat.Utility.FileIO 1.0 /Zabaat/Utility/FileIO -notrelocatable'

Module {
    dependencies: []
    Component {
        name: "ZFileRW"
        prototype: "QObject"
        exports: ["Zabaat.Utility.FileIO/ZFileOperations 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "readFile"
            type: "string"
            Parameter { name: "fileName"; type: "string" }
        }
        Method {
            name: "readFileAsB64"
            type: "string"
            Parameter { name: "fileName"; type: "string" }
        }
        Method {
            name: "createDirIfDoesNotExist"
            type: "bool"
            Parameter { name: "dir"; type: "string" }
        }
        Method {
            name: "writeFile"
            type: "bool"
            Parameter { name: "folder"; type: "string" }
            Parameter { name: "file"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "user"; type: "string" }
            Parameter { name: "pw"; type: "string" }
        }
        Method {
            name: "writeFile"
            type: "bool"
            Parameter { name: "folder"; type: "string" }
            Parameter { name: "file"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "user"; type: "string" }
        }
        Method {
            name: "writeFile"
            type: "bool"
            Parameter { name: "folder"; type: "string" }
            Parameter { name: "file"; type: "string" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "filesInFolder"
            type: "QStringList"
            Parameter { name: "folder"; type: "string" }
            Parameter { name: "filters"; type: "QStringList" }
            Parameter { name: "recursive"; type: "bool" }
        }
        Method {
            name: "filesInFolder"
            type: "QStringList"
            Parameter { name: "folder"; type: "string" }
            Parameter { name: "filters"; type: "QStringList" }
        }
        Method {
            name: "filesInFolder"
            type: "QStringList"
            Parameter { name: "folder"; type: "string" }
        }
        Method {
            name: "foldersInFolder"
            type: "QStringList"
            Parameter { name: "folder"; type: "string" }
            Parameter { name: "recursive"; type: "bool" }
        }
        Method {
            name: "foldersInFolder"
            type: "QStringList"
            Parameter { name: "folder"; type: "string" }
        }
        Method {
            name: "filesInFolderInfo"
            type: "string"
            Parameter { name: "folder"; type: "string" }
            Parameter { name: "filters"; type: "QStringList" }
            Parameter { name: "recursive"; type: "bool" }
        }
        Method {
            name: "filesInFolderInfo"
            type: "string"
            Parameter { name: "folder"; type: "string" }
            Parameter { name: "filters"; type: "QStringList" }
        }
        Method {
            name: "filesInFolderInfo"
            type: "string"
            Parameter { name: "folder"; type: "string" }
        }
        Method {
            name: "deleteFile"
            type: "bool"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "deleteAllFilesInFolder"
            type: "int"
            Parameter { name: "path"; type: "string" }
            Parameter { name: "filters"; type: "QStringList" }
        }
        Method {
            name: "deleteAllFilesInFolder"
            type: "int"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "deleteDirectory"
            type: "bool"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "ZPaths"
        prototype: "QObject"
        exports: ["Zabaat.Utility.FileIO/ZPaths 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "desktop"; type: "string"; isReadonly: true }
        Property { name: "documents"; type: "string"; isReadonly: true }
        Property { name: "fonts"; type: "string"; isReadonly: true }
        Property { name: "applications"; type: "string"; isReadonly: true }
        Property { name: "music"; type: "string"; isReadonly: true }
        Property { name: "movies"; type: "string"; isReadonly: true }
        Property { name: "pictures"; type: "string"; isReadonly: true }
        Property { name: "temp"; type: "string"; isReadonly: true }
        Property { name: "home"; type: "string"; isReadonly: true }
        Property { name: "data"; type: "string"; isReadonly: true }
        Property { name: "cache"; type: "string"; isReadonly: true }
        Property { name: "generic_cache"; type: "string"; isReadonly: true }
        Property { name: "generic_data"; type: "string"; isReadonly: true }
        Property { name: "runtime"; type: "string"; isReadonly: true }
        Property { name: "config"; type: "string"; isReadonly: true }
        Property { name: "download"; type: "string"; isReadonly: true }
        Property { name: "generic_config"; type: "string"; isReadonly: true }
        Property { name: "appData"; type: "string"; isReadonly: true }
        Property { name: "appLocalData"; type: "string"; isReadonly: true }
        Property { name: "app_config"; type: "string"; isReadonly: true }
        Property { name: "currentPath"; type: "string"; isReadonly: true }
        Signal { name: "pathsChanged" }
        Method { name: "printPaths" }
    }
    Component {
        name: "fileDownloader"
        prototype: "QObject"
        exports: ["Zabaat.Utility.FileIO/ZFileDownloader 1.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "downloadFailed"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "fileName"; type: "string" }
            Parameter { name: "bytesReceived"; type: "qlonglong" }
            Parameter { name: "bytesTotal"; type: "qlonglong" }
            Parameter { name: "reason"; type: "string" }
        }
        Signal {
            name: "downloadEnded"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "fileName"; type: "string" }
            Parameter { name: "bytesReceived"; type: "qlonglong" }
            Parameter { name: "bytesTotal"; type: "qlonglong" }
        }
        Signal {
            name: "downloadSaved"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "fileName"; type: "string" }
            Parameter { name: "bytesReceived"; type: "qlonglong" }
            Parameter { name: "bytesTotal"; type: "qlonglong" }
        }
        Signal {
            name: "downloadProgressChanged"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "bytesReceived"; type: "qlonglong" }
            Parameter { name: "bytesTotal"; type: "qlonglong" }
            Parameter { name: "elapsed"; type: "qlonglong" }
            Parameter { name: "speed"; type: "string" }
        }
        Signal {
            name: "uploadStarted"
            Parameter { name: "file"; type: "string" }
            Parameter { name: "url"; type: "string" }
        }
        Signal {
            name: "uploadFinished"
            Parameter { name: "file"; type: "string" }
            Parameter { name: "url"; type: "string" }
        }
        Signal {
            name: "uploadFailed"
            Parameter { name: "file"; type: "string" }
            Parameter { name: "url"; type: "string" }
        }
        Signal { name: "allDownloadsFinished" }
        Signal { name: "downloadPathChanged" }
        Method {
            name: "downloadFinished"
            Parameter { name: "reply"; type: "QNetworkReply"; isPointer: true }
        }
        Method {
            name: "download"
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "download"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "downloadMultiple"
            Parameter { name: "list"; type: "QStringList" }
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "downloadMultiple"
            Parameter { name: "list"; type: "QStringList" }
        }
        Method {
            name: "upload"
            Parameter { name: "fileName"; type: "string" }
            Parameter { name: "url"; type: "string" }
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "upload"
            Parameter { name: "fileName"; type: "string" }
            Parameter { name: "url"; type: "string" }
        }
    }
}
